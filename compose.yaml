services:
  django:
    build:
      dockerfile: Dockerfile
    container_name: django
    restart: unless-stopped
    env_file: .env
    volumes:
      - /app/static
      - ./:/app
    ports:
      - "8000:8000"
    networks:
      - default
    depends_on:
      postgres:
        condition: service_healthy

  angular:
    build:
      context: public
      dockerfile: Dockerfile
    image: nodejs
    container_name: angular
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./public:/app
      - node_modules:/app/node_modules
    ports:
      - "80:4200"
      - "49153:49153"
    networks:
      - default
    command: ng serve --host 0.0.0.0 --port 4200 --disable-host-check --poll 250
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
   image: postgres
   container_name: postgres
   restart: unless-stopped
   user: postgres
   secrets:
     - postgres-password
   volumes:
     - postgres-data:/var/lib/postgresql/data
   environment:
     - POSTGRES_DB=excel-autograder
     - POSTGRES_PASSWORD=password
   networks:
     - default
   expose:
     - 5432
   healthcheck:
     test: [ "CMD", "pg_isready" ]
     interval: 10s
     timeout: 5s
     retries: 5

networks:
  default:
    driver: bridge

volumes:
  node_modules:
  postgres-data:

secrets:
  postgres-password:
    file: db/password.txt

